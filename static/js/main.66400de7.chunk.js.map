{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onCheck","value","Board","handleCheckX","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","jumpTo","step","status","current","winner","moves","map","move","desc","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sNAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAMG,QAA1C,SACGH,EAAMI,QAKEL,Y,IAETM,E,4MACJC,aAAe,SAACC,GACd,EAAKP,MAAMG,QAAQI,I,kDAGrB,SAAaA,GAAI,IAAD,OACd,OACE,cAACR,EAAD,CACEI,QAAS,kBAAM,EAAKH,MAAMG,QAAQI,IAClCH,MAAOI,KAAKR,MAAMS,QAAQF,O,oBAKhC,WACE,OACE,gCACE,sBAAKN,UAAU,YAAf,UACGO,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKT,UAAU,YAAf,UACGO,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKT,UAAU,YAAf,UACGO,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA9BTC,IAAMC,WAqCpBC,E,4MACJC,MAAQ,CACNC,QAAS,CACP,CACEN,QAASO,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,G,EAGXb,aAAe,SAACC,GACd,IAAMQ,EAAU,EAAKD,MAAMC,QAAQK,MAAM,EAAG,EAAKN,MAAMI,WAAa,GAE9DT,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAK,EAAKO,MAAMK,QAAU,IAAM,IACxC,EAAKI,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CAAEf,QAASA,KACpCS,WAAYH,EAAQM,OACpBF,SAAU,EAAKL,MAAMK,Y,EAIzBM,OAAS,SAACC,GACR,EAAKH,SAAS,CACZL,WAAYQ,EACZP,QAASO,EAAO,IAAM,K,4CAI1B,WAAU,IAIJC,EAJG,OACDZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMI,YAC7BW,EAASP,EAAgBM,EAAQnB,SAGrCkB,EADEE,EACO,SAAWA,EAEd,uBAAmBrB,KAAKM,MAAMK,QAAU,IAAM,KAEtD,IAAMW,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,6BACE,wBAAQ9B,QAAS,kBAAM,EAAKuB,OAAOO,IAAnC,SAA2CC,KADpCD,MAMb,OACE,sBAAK/B,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACI,EAAD,CACEI,QAASmB,EAAQnB,QACjBU,QAASX,KAAKM,MAAMK,QACpBhB,QAAS,SAACI,GAAD,OAAO,EAAKD,aAAaC,QAGtC,sBAAKN,UAAU,YAAf,UACE,8BAAM0B,IACN,6BAAKG,c,GA/DInB,IAAMC,WAsEzB,SAASU,EAAgBb,GAWvB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMb,OAAQd,IAAK,CAAC,IAAD,cACnB2B,EAAM3B,GADa,GAC9B4B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI5B,EAAQ0B,IAAM1B,EAAQ0B,KAAO1B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,GACpE,OAAO5B,EAAQ0B,GAGnB,OAAO,KAITG,IAASC,OAAO,cAAC1B,EAAD,IAAU2B,SAASC,eAAe,W","file":"static/js/main.66400de7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className='square' onClick={props.onCheck}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n\r\nclass Board extends React.Component {\r\n  handleCheckX = (i) => {\r\n    this.props.onCheck(i);\r\n  };\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        onCheck={() => this.props.onCheck(i)}\r\n        value={this.props.squares[i]}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    history: [\r\n      {\r\n        squares: Array(9).fill(null),\r\n      },\r\n    ],\r\n    stepNumber: 0,\r\n    xIsNext: true,\r\n  };\r\n\r\n  handleCheckX = (i) => {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice(); //\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{ squares: squares }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  };\r\n\r\n  jumpTo = (step) => {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner' + winner;\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n    }\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className='game'>\r\n        <div className='game-board'>\r\n          <Board\r\n            squares={current.squares}\r\n            xIsNext={this.state.xIsNext}\r\n            onCheck={(i) => this.handleCheckX(i)}\r\n          />\r\n        </div>\r\n        <div className='game-info'>\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}